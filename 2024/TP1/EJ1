Program Clase1;
const
  dimF = 15;
  min = 10;
  max = 155;

type
  vector = array[1..dimF] of integer;

procedure CargarVectorRecursivo(var v: vector; var dimL: integer);
var
  valor: integer;
begin
  if (dimL < dimF) then begin
    valor := min + random(max - min + 1); // Generar valor aleatorio
    if (valor <> 20) then begin
      dimL := dimL + 1; // Incrementar la cantidad de elementos en el vector
      v[dimL]:= valor; // Asignar el valor generado al vector
      CargarVectorRecursivo(v, dimL); // Llamada recursiva
    end;
  end;
end;

procedure ImprimirVectorRecursivo(v: vector; dimL: integer);
begin	
  if (dimL > 0) then
    ImprimirVectorRecursivo(v, dimL - 1); 
  writeln(v[dimL]);
end;

procedure ImprimirVector(v: vector; dimL: integer);
var
	i: integer;
begin	
  for i:= 1 to dimL do 
	begin
		writeln(v[i]);
	end;
end;

var v: vector;
  dimL: integer;
begin
  randomize;
  dimL := 0; // Inicializar la cantidad de elementos en el vector
  CargarVectorRecursivo(v, dimL); // Cargar el vector

  if (dimL = 0) then
    writeln('--- Vector sin elementos ---')
  else begin
    writeln('Elementos del vector impresos de forma recursiva');
    ImprimirVectorRecursivo(v, dimL); // Imprimir los elementos del vector
    writeln('Elementos del vector impresos de forma NO recursiva ');
    ImprimirVector(v, dimL);
  end;
end.
